{
	// Place your snippets for apex here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Public method": {
		"prefix": "pum",
		"body": [
			"public void methodName() {",
			"$0",
			"}",
		],
		"description": "Log output to console"
	},
	"Aura enabled method": {
		"prefix": "arm",
		"body": [
			"@AuraEnabled",
			"public static string methodName() {",
			"    return null;$0",
			"}",
		],
		"description": "Creates an Aura enabled method"
	},
	"Aura enabled method cacheable": {
		"prefix": "armc",
		"body": [
			"@AuraEnabled(cacheable = true)",
			"public static string methodName() {",
			"    return null;$0",
			"}",
		],
		"description": "Creates an Aura enabled method"
	},
	"Aura enabled property": {
		"prefix": "arp",
		"body": [
			"@AuraEnabled",
			"public static string propertyName() { get; set; }",
		],
		"description": "Creates an Aura enabled property"
	},
	"System debug": {
		"prefix": "syd",
		"body": [
			"System.debug('$0');",
		],
		"description": "System debug"
	},
	"Add method Comment": {
		"prefix": "cmt",
		"body": [
			"/**",
			" * @description",
			" * @param param1",
			" * @param param1",
			" * @return na",
			" **/",
		],
		"description": "Method level comments"
	},
	"Add Class Comments": {
		"prefix": "clt",
		"body": [
			"/**",
			" * @description",
			" * @author Gurjit Singh",
			" **/",
		],
		"description": "Class level comments"
	},
}