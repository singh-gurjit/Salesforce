{
	"Print to console": {
		"prefix": "clg",
		"body": [
			"console.log('$0')"
		],
		"description": "Log output to console"
	},
	"Print error to console": {
		"prefix": "cle",
		"body": [
			"console.error('There is an error', error)"
		],
		"description": "Log error to console"
	},
	"Clear console": {
		"prefix": "clc",
		"body": [
			"console.clear()"
		],
		"description": "clear console"
	},
	"Function": {
		"prefix": "func",
		"body": [
			"methodName(event) {",
			"}"
		],
		"description": "js class function"
	},
	"Wire Method": {
		"prefix": "wrmt",
		"body": [
			"@wire(methodToWire, { param: '$' })",
			"methodName(result) {",
			"    const { data, error } = result",
			"    if (data) {",
			"       $0",
			"    } else if (error) {",
			"        console.error('There is an error', error)",
			"    }",
			"}"
		],
		"description": "Wire method code"
	},
	"Add method Comment": {
		"prefix": "cmt",
		"body": [
			"/**",
			" * @description",
			" * @param {string} param1",
			" * @param {number} param1",
			" * @return na",
			" **/"
		],
		"description": "Method level comments"
	},
	"Add Class Comments": {
		"prefix": "clt",
		"body": [
			"/**",
			" * @description",
			" * @author Gurjit Singh",
			" **/"
		],
		"description": "Class level comments"
	},
	"LDS create record": {
		"prefix": "imcr",
		"body": [
			"import { createRecord } from 'lightning/uiRecordApi'"
		],
		"description": "import create record"
	},
	"LDS update record": {
		"prefix": "imur",
		"body": [
			"import { updateRecord } from 'lightning/uiRecordApi'"
		],
		"description": "import update record"
	},
	"LDS delete record": {
		"prefix": "imdr",
		"body": [
			"import { deleteRecord } from 'lightning/uiRecordApi'"
		],
		"description": "import delete record"
	},
	"Import Apex": {
		"prefix": "imap",
		"body": [
			"import methodName from '@salesforce/apex/className.methodName'"
		],
		"description": "Import Apex"
	},
	"Import Custom Label": {
		"prefix": "imcl",
		"body": [
			"import labelName from '@salesforce/label/c.labelName'"
		],
		"description": "Import Custom Label"
	},
	"Import Static Resource": {
		"prefix": "imsr",
		"body": [
			"import RESOURCE_NAME from '@salesforce/resourceUrl/resourceName'"
		],
		"description": "Import Static Resource"
	},
	"Import sObject": {
		"prefix": "imob",
		"body": [
			"import SOBJECT_NAME from '@salesforce/schema/sObjectName'"
		],
		"description": "Import sObject"
	},
	"Import ShowToastEvent": {
		"prefix": "imst",
		"body": [
			"import { ShowToastEvent } from 'lightning/platformShowToastEvent';"
		],
		"description": "Import ShowToastEvent"
	},
	"Import load style load script": {
		"prefix": "imld",
		"body": [
			"import { loadStyle, loadScript } from 'lightning/platformResourceLoader';"
		],
		"description": "Import ShowToastEvent"
	},
	"Show Toast Event Method": {
		"prefix": "toast",
		"body": [
			"showToast(title, message, variant) {",
			"\tconst event = new ShowToastEvent({",
			"\t\ttitle,",
			"\t\tmessage,",
			"\t\tvariant",
			"\t});",
			"\tthis.dispatchEvent(event);",
			"}"
		],
		"description": "Show toast event method"
	},
	"lightning out": {
		"prefix": "lgtout",
		"body": [
			"\\$Lightning.use(\"c:AuraAppName\", function () {",
			"\t\\$Lightning.createComponent(\"c:componentName\", {",
			"\t\t// make sure to create a div with id as  LightningContainer",
			"\t}, \"LightningContainer\", function (component) {",
			"\t\t//component created",
			"\t\tconst recordId = '{!\\$CurrentPage.parameters.id}'",
			"\t});",
			"});"
		],
		"description": "lightning out"
	},
	"dispatch custom event": {
		"prefix": "dce",
		"body": [
			"this.dispatchEvent(new CustomEvent('eventname', {",
			"\tdetail: $0data,",
			"\tbubbles: false,",
			"\tcomposed: false",
			"}))"
		],
		"description": "dispatch custom event"
	}
}